Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del
profesor en GitHub1 y realiza un fork, de manera que consigas tener
una copia del repositorio en tu cuenta de GitHub. Clona el repositorio
que acabas de crear a local para poder editar los archivos. Trabaja a
partir de ahora en ese repositorio, sincronizando los cambios que vayas
realizando.

Como tarde al final de la práctica, deberás realizar un push para subir
tus cambios a tu repositorio en GitHub. En esta práctica, al contrario
que con las demás, se recomienda hacer frecuentes commits, pero el
push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que
se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se
plantean en este guión en el fichero p5.txt que encontrarás también
en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP
con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes
cuestiones:
* ¿Cuántos paquetes componen la captura?

	-954 paquetes

* ¿Cuánto tiempo dura la captura?

	-56 segundos, en concreto 56.149345

* ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se
trata de una IP pública o de una IP privada? ¿Por qué lo sabes?

	- 192.168.1.34.  Ip privada porque empieza por 192.168. que es el rango de ip 		privadas.


3. Antes de analizar las tramas, mira las estadı́sticas generales que aparecen en el menú de Statistics. En el apartado de jerarquı́a de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico
correspondiente al protocolo TCP y UDP.

* ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando
de una aplicación que transmite en tiempo real?

	-918 paquetes son UDP que representa un 96,2% que es mayor que los 20 paquetes de 	TDP (2,1%), lo que es normal porque es el protocolo que se usa para conexiones en 	tiempo real. 

* ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos?
¿Cuales crees que son señal y cuales ruido?

	- DNS*, HTTP*, STUN, SIP, SDP,RTP(para audio y para video-H.261)), ARP*, 		ICMP*,RTCP*.  (Siendo ruido los protocolos marcados con*)


4. Observa por encima el flujo de tramas en el menú de Statistics en IO
Graphs. La captura que estamos viendo incluye desde la inicialización
(registro) de la aplicación hasta su finalización, con una llamada entremedias.

* Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En
qué segundos tienen lugar esos envı́os?

	- 25 paquetes sip que se envían en los segundos 7, 14, 16,38, 39 y 55.

* Y los paquetes con RTP, ¿cuándo se envı́an?

	- 807 paquetes RTP que se envían entre los segundos 17 y 38, salvo en el segundo 	22 que no se envía ningún paquete RTP.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


5. Analiza las dos primeras tramas de la captura.

* ¿Qué servicio es el utilizado en estas tramas?

	- DNS

* ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga?

	- 80.58.61.250

* ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?

	- 86.64.162.35


6. A continuación, hay más de una docena de tramas TCP/HTTP.

* ¿Podrı́as decir la URL que se está pidiendo?

	- 83.36.48.212

* ¿Qué user agent (UA) la está pidiendo?

	- Miramos la cabecera User-Agent y vemos que es Ekiga\r\n

* ¿Qué devuelve el servidor?

	- Contesta con un mensaje de 200 OK mas la IP pedida.

* Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y
vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo
que está respondiendo el servidor?

	- Recibimos una ip 212.128.254.137 por lo que sabemos que no es una ip privada 		sino pública de ekiga.


7. Hasta la trama 45 se puede observar una secuencia de tramas del
protocolo STUN.

* ¿Por qué se hace uso de este protocolo?

	- Es un protocolo que permite conocer maquinas UDP que están tras NAT y obtener su 	ip pública, el tipo de NAT y el puerto.

* ¿Podrı́as decir si estamos tras un NAT o no?

	- Si, porque STUN solo se usa si se da esta situación, UDP tras NAT.


8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al
realizar una llamada. Por eso, todo usuario registra su localización en
un servidor Registrar. El Registrar guarda información sobre los
usuarios en un servidor de localización que puede ser utilizado para
localizar usuarios.


* ¿Qué dirección IP tiene el servidor Registrar?

	- 86.64.162.35

* ¿A qué puerto (del servidor Registrar) se envı́an los paquetes
SIP?

	- dst port: 5060

* ¿Qué método SIP utiliza el UA para registrarse?

	- REGISTER

* Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?

	- Allow nos muestra los métodos que permite: INVITE,ACK,OPTIONS, BYE, CANCEL, 		NOTIFY, REFER, MESSAGE

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:

* ¿Se registra con éxito en el primer intento?

	-No, el servidor sip contesta con un mensaje 401 porque esa dirección no esta 		autorizada, al no mandar la autentificacion.

* ¿Cómo sabemos si el registro se ha realizado correctamente o no?

	- Si el servidor contesta con un mensaje 200 OK como en el mensaje 54 tras el 		segundo intento de register.

* ¿Podrı́as identificar las diferencias entre el primer intento y el
segundo de registro? (fı́jate en el tamaño de los paquetes y mira
a qué se debe el cambio)

	-En el primer intento no aparece la autorización mientras que en el segundo si 		aparece la cabecera authorization que le permite autenticarse y así darse de alta, 	por eso que tenga mas longitud este paquete, 712. Length primer paquete = 523.

* ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica
las unidades.

	- 3600 segundos


10. Una vez registrados, podemos efectuar una llamada. Vamos a probar
con el servicio de eco de Ekiga que nos permite comprobar si nos
hemos conectado correctamente. El servicio de eco tiene la dirección
sip:500@ekiga.net. Veamos el INVITE de cerca.

* ¿Puede verse el nombre del que efectúa la llamada, ası́ como su
dirección SIP?

	- si, en el paquete 84 vemos el nombre en From: “Gregorio Robles” y
	SIP from address: sip:grex@ekiga.net

* ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?

	- El cuerpo contiene la descripción de la sesión con v,o,c,t, 1 mensajes de audio 	son 8 atributos y otro mensaje de video con un atributo. SIP/SDP.

* ¿Tiene éxito el primer intento? ¿Cómo lo sabes?

	- No, porque recibe un mensaje 407 que nos avisa de que el proxy no esta 		autorizado.

* ¿En qué se diferencia el segundo INVITE más abajo del primero?
¿A qué crees que se debe esto?

	- En que en el segundo mensaje ya aparece la autorización del proxy, esto hace que  	la longitud sea 1181 en el segundo paquete y 982 en el primero.


11. Una vez conectado, estudia el intercambio de tramas.

* ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?

	- RTP para audio y video, los de video aparecen codificados en H.261.

* ¿Cuál es el tamaño de paquete de los mismos?

	- El tamaño de los paquetes de audio es en todos de 214 porque se toman muestras 	de esa longitud, mientras que en los paquetes de video la longitud varía.

* ¿Se utilizan bits de padding?

	- No, hay un apartado que lo indica expresamente.

* ¿Cuál es la periodicidad de los paquetes (en origen; nota que la
captura es en destino)?

	- sólo he encontrado el Timestamp que indicaría un periodo de 160 segundos. PREGUNTAR**

* ¿Cuántos bits/segundo se envı́an?

	- *** no lo se, preguntar.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.

* ¿Cuántos flujos hay? ¿por qué?

	-Hay dos flujos, uno de audio(payload = g711a) y otro de video(payload = h.261)

* ¿Cuántos paquetes se pierden?

	- se pierden 0 paquetes, lo que ,como es normal, representa el 0%.

* ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el
valor de delta?

	- Max Delta(ms) = 1290.444(audio) y 1290.479 (video). Tiempo entre paquetes.

* ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué
quiere decir eso? ¿Crees que estamos ante una conversación de
calidad?

	- Max Jitter = 119.635 (audio) y 183.096 (video)
	  Mean Jitter = 42.500 (audio) y 153.240 (video)
	  Jitter es la variación del retardo.
	Estamos ante una conversacion de baja calidad porque el jitter medio pasa de los 30ms 		y en el video lo supera casi en 3 veces.


13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.

* ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado?

	- 0 en ambos casos porque al ser el primero no tenemos paquetes con quien 		compararlo.

* ¿Podemos saber si éste es el primer paquete que nos han enviado?

	- Si, porque tiene el menor numero de secuencia.

* Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál?

	- último paquete con jitter menor que 10 —> 246(seq=23420). 
	El paquete con número de secuencia 23421 tiene un jitter de 38.82 ms.
	Luego como mucho baja a 20,25 en el paquete 724.

* ¿A qué se debe el cambio tan brusco del jitter?

	- A que seguramente la latencia fuera mayor por algún problema en la red.

* ¿Es comparable el cambio en el valor de jitter con el del delta?
¿Cual es más grande?

	-el Jitter cambia en relación a las variaciones del delta, por lo que si tienen 	relación. Delta es mayor.


14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.

* ¿Cuánto dura la conversación?

	- 24 segundos (desde 14.426793 hasta 39.229683)

* ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?

	- Para audio SSRC = 0xbf4afd37 y para video 0x43306582.
	Hay 2 SSRC porque hay dos flujos. CSRC = 0, no hay.


15. Identifica la trama donde se finaliza la conversación.

* ¿Qué método SIP se utiliza?

	- Método sip: BYE 

* ¿En qué trama(s)?

	- Se manda 4 veces: en las tramas 924, 925, 927 y 933.

* ¿Por qué crees que se envı́a varias veces?

	- Para asegurarse de que no se pierde la petición BYE y no se queda la conversación abierta. Ya que estamos utilizando el protocolo UDP.


16. Finalmente, se cierra la aplicación de VozIP.

* ¿Por qué aparece una instrucción SIP del tipo REGISTER?

	- Porque estos mensajes REGISTER vienen con la cabecera espires a 0, lo cual implica que se está dando de baja ese usuario.

* ¿En qué trama sucede esto?

	- En la trama 950 se da un intento fallido y en la 952 consigue darse de baja.

* ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?

	- Igual que cuando se registro le había faltado la cabecera Authorization.
	En el segundo intento ya se autentica.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


Captura de una sesión SIP

17. Dirígete a la web de IPTel3 con el navegador y créate una cuenta SIP. Recibirás un correo electrónico de confirmación en la dirección que has indicado al registrarte.
	_OK: Registrada.

18.Lanza Ekiga, y configúralo con los datos de la cuenta que te acabas de crear. Para ello, puedes ir al menú “Editar” y seleccionar “Cuentas”. Tendrás que rellenar los campos de manera similar a lo que se puede ver en la imagen a continuación (recuerda poner tu nombre de usuario en lugar de “grex”). Comprueba que estás conectado (En la barra al final de la ventana podrás ver “Connected”). Al terminar, cierra completamente Ekiga.
	_

19. Captura una sesión SIP de una conversación con el número SIP sip:music@sip.iptel.org.
Recuerda que has de comenzar a capturar tramas antes de arrancar
Ekiga para ver todo el proceso3 .
	_

20. Observa las diferencias en el inicio de la conversación entre el entorno
del laboratorio y el del ejercicio anterior4 :

* ¿Se utilizan DNS y STUN? ¿Por qué?

	- No, porque en el laboratorio nuestras maquinas ya tienen ip publica.

* ¿Son diferentes el registro y la descripción de la sesión?

	- La descripción de la sesión se hace por el método INVITE de SIP, 		mientras que el registro por el método REGISTER.


21. Identifica las diferencias existentes entre esta conversación y la conversación anterior:

* ¿Cuántos flujos tenemos?

	- 2 flujos de audio. RTP

* ¿Cuál es su periodicidad?

	- *** Su timestamp nos diría que es 320.

* ¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?

	- Para el primer flujo Max Delta (SSRC = 0x704f3fc1) = 27.309.
	  Para el segundo flujo Max Delta (SSRC = 0xd7f8f1fb) = 37.083.
	Jitter:
	Flujo1 -> MAX = 1.541 / MEAN = 0.556
	Flujo1 -> MAX = 13.537 / MEAN = 12.599

* ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo?
Comprueba que poniendo un valor demasiado pequeño para el
buffer de jitter, la conversación puede no tener la calidad necesaria.

	-

* ¿Sabrı́as decir qué tipo de servicio ofrece sip:music@iptel.org?

	-

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


22. Filtra por los paquetes SIP de la captura y guarda únicamente los
paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

